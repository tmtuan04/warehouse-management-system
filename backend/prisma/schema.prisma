generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model alerts {
  id          Int       @id @default(autoincrement())
  alert_type  String    @db.VarChar(50)
  product_id  Int?
  message     String
  severity    String?   @default("info") @db.VarChar(20)
  status      String?   @default("unread") @db.VarChar(20)
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  resolved_at DateTime? @db.Timestamp(6)
  products    products? @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model categories {
  id          Int        @id @default(autoincrement())
  name        String     @db.VarChar(100)
  description String?
  products    products[]
}

model chatbot_logs {
  id         Int       @id @default(autoincrement())
  user_id    String?   @db.Uuid
  query      String
  response   String
  intent     String?   @db.VarChar(100)
  confidence Decimal?  @db.Decimal(5, 2)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  users      users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model inventory {
  id         Int       @id @default(autoincrement())
  product_id Int?
  quantity   Int       @default(0)
  reserved   Int?      @default(0)
  available  Int?      @default(dbgenerated("(quantity - reserved)"))
  updated_at DateTime? @default(now()) @db.Timestamp(6)
  products   products? @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model products {
  id            Int            @id @default(autoincrement())
  name          String         @db.VarChar(150)
  sku           String         @unique @db.VarChar(100)
  barcode       String?        @unique @db.VarChar(100)
  description   String?
  price         Decimal        @db.Decimal(12, 2)
  cost          Decimal?       @db.Decimal(12, 2)
  category_id   Int?
  supplier_id   Int?
  unit          String?        @default("pcs") @db.VarChar(50)
  weight        Decimal?       @db.Decimal(10, 2)
  dimensions    Json?
  stock_min     Int?           @default(0)
  stock_max     Int?
  status        String?        @default("active") @db.VarChar(20)
  is_perishable Boolean?       @default(false)
  expiry_date   DateTime?      @db.Date
  created_at    DateTime?      @default(now()) @db.Timestamp(6)
  updated_at    DateTime?      @default(now()) @db.Timestamp(6)
  alerts        alerts[]
  inventory     inventory[]
  categories    categories?    @relation(fields: [category_id], references: [id], onUpdate: NoAction)
  suppliers     suppliers?     @relation(fields: [supplier_id], references: [id], onUpdate: NoAction)
  transactions  transactions[]
}

model roles {
  id          Int     @id @default(autoincrement())
  name        String  @unique @db.VarChar(20)
  description String?
  users       users[]
}

model suppliers {
  id           Int        @id @default(autoincrement())
  code         String     @unique @db.VarChar(50)
  name         String     @db.VarChar(150)
  contact_name String?    @db.VarChar(150)
  phone        String?    @db.VarChar(20)
  email        String?    @db.VarChar(150)
  address      String?
  city         String?    @db.VarChar(100)
  country      String?    @db.VarChar(100)
  tax_code     String?    @db.VarChar(50)
  website      String?
  bank_account String?    @db.VarChar(100)
  bank_name    String?    @db.VarChar(150)
  status       String?    @default("active") @db.VarChar(20)
  note         String?
  created_at   DateTime?  @default(now()) @db.Timestamp(6)
  updated_at   DateTime?  @default(now()) @db.Timestamp(6)
  products     products[]
}

model transactions {
  id         Int       @id @default(autoincrement())
  product_id Int?
  type       String    @db.VarChar(20)
  quantity   Int
  unit_price Decimal?  @db.Decimal(12, 2)
  total      Decimal?  @default(dbgenerated("((quantity)::numeric * unit_price)")) @db.Decimal(12, 2)
  reference  String?   @db.VarChar(100)
  created_by String?   @db.Uuid
  created_at DateTime? @default(now()) @db.Timestamp(6)
  users      users?    @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  products   products? @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model users {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  username     String         @unique @db.VarChar(50)
  full_name    String         @db.VarChar(100)
  email        String         @unique @db.VarChar(100)
  phone        String?        @unique @db.VarChar(20)
  avatar_url   String?
  role_id      Int?
  created_at   DateTime?      @default(now()) @db.Timestamp(6)
  updated_at   DateTime?      @default(now()) @db.Timestamp(6)
  password     String?
  chatbot_logs chatbot_logs[]
  transactions transactions[]
  roles        roles?         @relation(fields: [role_id], references: [id], onUpdate: NoAction)
}
